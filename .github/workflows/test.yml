name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:7
        ports:
          - 27017:27017
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      
      - name: Install dependencies
        run: bun install
      
      - name: Run linting
        run: bun run lint
      
      - name: Run unit tests
        run: bun run test:unit
      
      - name: Run integration tests
        run: bun run test:integration
      
      - name: Generate coverage report
        run: bun run test:coverage
      
      - name: Generate Coverage Summary
        run: |
          echo "# Code Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "## Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Files | % Stmts | % Branch | % Funcs | % Lines | Uncovered Lines |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------|---------|----------|---------|---------|-----------------|" >> $GITHUB_STEP_SUMMARY
          
          # Extract coverage data from the JSON report
          # This handles the v8 coverage format
          if [ -f "coverage/coverage-final.json" ]; then
            node -e '
              const fs = require("fs");
              const coverage = JSON.parse(fs.readFileSync("./coverage/coverage-final.json", "utf8"));
              
              let totalStatements = 0;
              let totalCovered = 0;
              let totalFiles = 0;
              
              for (const file in coverage) {
                totalFiles++;
                const data = coverage[file];
                for (const line in data.statementMap) {
                  totalStatements++;
                  if (data.s[line] > 0) {
                    totalCovered++;
                  }
                }
              }
              
              const percent = totalStatements > 0 ? (totalCovered / totalStatements * 100).toFixed(2) : "100.00";
              console.log(`| Total | ${totalFiles} | ${percent}% | N/A | N/A | ${percent}% | - |`);
            ' >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Details" >> $GITHUB_STEP_SUMMARY
          echo "For detailed coverage information, check the coverage directory in the workflow artifacts." >> $GITHUB_STEP_SUMMARY

      - name: Upload Coverage Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: ./coverage/
          retention-days: 7 